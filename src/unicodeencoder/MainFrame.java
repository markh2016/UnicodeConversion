/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package unicodeencoder;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.io.PrintWriter;
import java.io.UnsupportedEncodingException;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author mark
 */
public class MainFrame extends javax.swing.JFrame {

    /**
     * Creates new form MainFrame
     */
    public MainFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        inPanel = new javax.swing.JPanel();
        Jscrollinput = new javax.swing.JScrollPane();
        inText = new javax.swing.JTextArea();
        outPanel = new javax.swing.JPanel();
        JscrollOut = new javax.swing.JScrollPane();
        outText = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        hexoutPanel = new javax.swing.JPanel();
        JScrollHex = new javax.swing.JScrollPane();
        hexOutDisplay = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        mnuFile = new javax.swing.JMenu();
        mnuitemFileOpen = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        mnuItemSaveFiile = new javax.swing.JMenuItem();
        mnuItemOpenUnicode = new javax.swing.JMenuItem();
        mnuConvert = new javax.swing.JMenu();
        mnuItemUnicode = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        mnuItemHexFromUTF8 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Unicode Generator with Hex for Arduino MD Harrington");

        Jscrollinput.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        inText.setColumns(20);
        inText.setForeground(new java.awt.Color(0, 0, 255));
        inText.setLineWrap(true);
        inText.setRows(5);
        inText.setDisabledTextColor(new java.awt.Color(230, 248, 250));
        inText.setDoubleBuffered(true);
        Jscrollinput.setViewportView(inText);

        javax.swing.GroupLayout inPanelLayout = new javax.swing.GroupLayout(inPanel);
        inPanel.setLayout(inPanelLayout);
        inPanelLayout.setHorizontalGroup(
            inPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(inPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Jscrollinput, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        inPanelLayout.setVerticalGroup(
            inPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(inPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Jscrollinput, javax.swing.GroupLayout.DEFAULT_SIZE, 113, Short.MAX_VALUE)
                .addContainerGap())
        );

        JscrollOut.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        outText.setColumns(20);
        outText.setLineWrap(true);
        outText.setRows(5);
        JscrollOut.setViewportView(outText);

        javax.swing.GroupLayout outPanelLayout = new javax.swing.GroupLayout(outPanel);
        outPanel.setLayout(outPanelLayout);
        outPanelLayout.setHorizontalGroup(
            outPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(outPanelLayout.createSequentialGroup()
                .addComponent(JscrollOut, javax.swing.GroupLayout.DEFAULT_SIZE, 267, Short.MAX_VALUE)
                .addContainerGap())
        );
        outPanelLayout.setVerticalGroup(
            outPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(outPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(JscrollOut)
                .addContainerGap())
        );

        jLabel1.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 102, 255));
        jLabel1.setText(" File Contents To be Converted");

        jLabel2.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 102, 255));
        jLabel2.setText("  Converted text to unicode  format");

        JScrollHex.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        hexOutDisplay.setColumns(20);
        hexOutDisplay.setLineWrap(true);
        hexOutDisplay.setRows(5);
        JScrollHex.setViewportView(hexOutDisplay);

        javax.swing.GroupLayout hexoutPanelLayout = new javax.swing.GroupLayout(hexoutPanel);
        hexoutPanel.setLayout(hexoutPanelLayout);
        hexoutPanelLayout.setHorizontalGroup(
            hexoutPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(JScrollHex)
        );
        hexoutPanelLayout.setVerticalGroup(
            hexoutPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(JScrollHex, javax.swing.GroupLayout.DEFAULT_SIZE, 138, Short.MAX_VALUE)
        );

        jLabel3.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 102, 255));
        jLabel3.setText("Hex Coding for Unicode Output ");

        mnuFile.setText("File");

        mnuitemFileOpen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/unicodeencoder/icons/Folder-Open-icon.png"))); // NOI18N
        mnuitemFileOpen.setText("Open UTF-8 File");
        mnuitemFileOpen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuitemFileOpenActionPerformed(evt);
            }
        });
        mnuFile.add(mnuitemFileOpen);
        mnuFile.add(jSeparator1);

        mnuItemSaveFiile.setIcon(new javax.swing.ImageIcon("/home/mark/NetBeansProjects/UnicodeEncoder/src/unicodeencoder/icons/save-as.png")); // NOI18N
        mnuItemSaveFiile.setText("Save Unicode as Hex ");
        mnuItemSaveFiile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuItemSaveFiileActionPerformed(evt);
            }
        });
        mnuFile.add(mnuItemSaveFiile);

        mnuItemOpenUnicode.setIcon(new javax.swing.ImageIcon(getClass().getResource("/unicodeencoder/icons/Folder-Open-icon.png"))); // NOI18N
        mnuItemOpenUnicode.setText("Open Unicoded File");
        mnuItemOpenUnicode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuItemOpenUnicodeActionPerformed(evt);
            }
        });
        mnuFile.add(mnuItemOpenUnicode);

        jMenuBar1.add(mnuFile);

        mnuConvert.setText("Conversions");

        mnuItemUnicode.setIcon(new javax.swing.ImageIcon(getClass().getResource("/unicodeencoder/icons/data.png"))); // NOI18N
        mnuItemUnicode.setText("Convert To Unicode");
        mnuItemUnicode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuItemUnicodeActionPerformed(evt);
            }
        });
        mnuConvert.add(mnuItemUnicode);
        mnuConvert.add(jSeparator2);

        mnuItemHexFromUTF8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/unicodeencoder/icons/data.png"))); // NOI18N
        mnuItemHexFromUTF8.setText("Convert UTF8 to Hex");
        mnuItemHexFromUTF8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuItemHexFromUTF8ActionPerformed(evt);
            }
        });
        mnuConvert.add(mnuItemHexFromUTF8);

        jMenuBar1.add(mnuConvert);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(inPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(outPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(hexoutPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(inPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(outPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addGap(3, 3, 3)
                .addComponent(hexoutPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
     private void showMessage(JFrame f ,String ms , String t )
     {
         JOptionPane.showMessageDialog(f,
         ms,
         t,
        JOptionPane.INFORMATION_MESSAGE);
         
         
     }
    
    
   private void actionOpenFile() 
   {
       this.outText.setText("");
       this.hexOutDisplay.setText("");
       
       
       fileChooser = new JFileChooser()  ;
         FileNameExtensionFilter filter = new FileNameExtensionFilter(
            "Text Files", "txt");
          fileChooser.setFileFilter(filter);
          int returnVal = fileChooser.showOpenDialog(this);
         if (returnVal == JFileChooser.APPROVE_OPTION) {
                 file = fileChooser.getSelectedFile();
            try {
                 // What to do with the file, e.g. display it in a TextArea
                    this.inText.read( new FileReader( file.getAbsolutePath() ), null );
                    
                } catch (IOException ex) {
                    
                    String s = "Problem accessing file\n"+file.getAbsolutePath() ;
                    this.showMessage(this,s, "Inane warning") ;
                   
                    }
                }
                  else  {
             
                     String s = "File access cancelled by user." ;
                     this.showMessage(this,s , "Inane warning");
                    
            
            }
      
       
       
   }
    
    
    private void mnuitemFileOpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuitemFileOpenActionPerformed
        // TODO add your handling code here:
         
        actionOpenFile() ;
        
    }//GEN-LAST:event_mnuitemFileOpenActionPerformed

    
    private String readAllBytesJava7(String filePath) 
{
    String content = "";
    try
    {
        content = new String ( Files.readAllBytes( Paths.get(path) ) );
    } 
    catch (IOException e) 
    {
       String msg = "Unable to read file\nOr file does not exist" ; 
       System.out.println(msg)   ; 
    }
    return content;
}
    
    
    private void mnuItemUnicodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuItemUnicodeActionPerformed
            
        try {
            // TODO add your handling code here:
            
            
            // create a file object
            unicodedfile = new File("unicoded.txt") ;
            
            // delete the file if it exists
            
            // get the path reference for later use
            
            path = unicodedfile.getAbsolutePath() ;
                        
            // we use extrenal  javatool to  convert to  unicode
            Runtime.getRuntime().exec(m_command + " " + file + " " + unicodedfile ) ;
                      
            String y = "File save at \n"+path ;
            showMessage(this,y,"File Success" );
            
           } catch (IOException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
           }
            
            
       
           
        
        
    }//GEN-LAST:event_mnuItemUnicodeActionPerformed

    
    private void writeHexfromUnicodetofile()
    {
        // check to see if  file exits 
        PrintWriter printWriter  ;
        
        hexencodedFile = new File(hexFileOut) ;
        outpath = hexencodedFile.getAbsolutePath() ;
        
    
        
        
        
         if(hexOutDisplay.getText().trim().length()>0)
          {
            
              
              try {
                  
                  
                  printWriter = new PrintWriter (hexencodedFile);
                  printWriter.print(hexOutDisplay.getText().trim());
                  printWriter.close();
                  
                  String g = "File created \n" + outpath ; 
                  showMessage(this, g,"File Creation Success");
                  
                } catch (FileNotFoundException ex) {
                  String error = "Unable To write file\nCheck permissions" ;
                  System.out.println(error);
               }
                         
              
          }
          
        
        
    }
    
    
    private void mnuItemHexFromUTF8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuItemHexFromUTF8ActionPerformed
        
         String a = this.outText.getText().trim() ;
         String b="" ; 
        try {
            // TODO add your handling code here:
            
            
            byte[] inbytes = a.getBytes("UTF-8");
           
            
            for (byte x : inbytes) {
                
                b = b +"\\x0"+ Integer.toHexString(x & 0xFF) ; 
                
            }
                }  catch (UnsupportedEncodingException ex) {
                     Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
        
        this.hexOutDisplay.setText(b) ;
    }//GEN-LAST:event_mnuItemHexFromUTF8ActionPerformed

    private void mnuItemSaveFiileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuItemSaveFiileActionPerformed
        // TODO add your handling code here:
                  
          // make shure we have something n there first 
         writeHexfromUnicodetofile();
          
        
        
    }//GEN-LAST:event_mnuItemSaveFiileActionPerformed

    private void mnuItemOpenUnicodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuItemOpenUnicodeActionPerformed
        // TODO add your handling code here:
        
        
           // now re open the  file created  and set outText to contents 
            if(this.unicodedfile.exists())
            {
            this.outText.setText( this.readAllBytesJava7(path) ); 
            }
            
            
     
            
       
    }//GEN-LAST:event_mnuItemOpenUnicodeActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            MainFrame myFrame = new MainFrame() ;
            myFrame.setLocationRelativeTo(null);
            myFrame.setVisible(true);
        });
    }
    
    
    // user declared variablea
    
    private JFileChooser fileChooser ;
    private File file , hexencodedFile; 
    private  final String m_command = "native2ascii -encoding utf8 " ; 
    private File unicodedfile ;
    private String path ;
    private String outpath ; 
    private final String hexFileOut ="UniCodeToHex.txt" ;
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane JScrollHex;
    private javax.swing.JScrollPane JscrollOut;
    private javax.swing.JScrollPane Jscrollinput;
    private javax.swing.JTextArea hexOutDisplay;
    private javax.swing.JPanel hexoutPanel;
    private javax.swing.JPanel inPanel;
    private javax.swing.JTextArea inText;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JMenu mnuConvert;
    private javax.swing.JMenu mnuFile;
    private javax.swing.JMenuItem mnuItemHexFromUTF8;
    private javax.swing.JMenuItem mnuItemOpenUnicode;
    private javax.swing.JMenuItem mnuItemSaveFiile;
    private javax.swing.JMenuItem mnuItemUnicode;
    private javax.swing.JMenuItem mnuitemFileOpen;
    private javax.swing.JPanel outPanel;
    private javax.swing.JTextArea outText;
    // End of variables declaration//GEN-END:variables
}
